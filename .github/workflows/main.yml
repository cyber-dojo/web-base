name: Main

on:
  push:
    branches:
      - main

env:
  IMAGE_TAR_FILENAME: /tmp/${{ github.event.repository.name }}:${{ github.sha }}.tar
  DOCKER_API_VERSION: ${{ vars.DOCKER_API_VERSION }}


jobs:
  setup:
    runs-on: ubuntu-latest
    outputs:
      image_name: ${{ steps.vars.outputs.image_name }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Prepare output for workflow jobs
        id: vars
        run: |
          source ./sh/lib.sh
          export $(echo_env_vars)          
          echo "image_name=${CYBER_DOJO_WEB_BASE_IMAGE}" >> ${GITHUB_OUTPUT}


  build-image:
    runs-on: ubuntu-latest
    needs: [setup]
    env:
      IMAGE_NAME: ${{ needs.setup.outputs.image_name }}
    permissions:
      id-token: write
      contents: write
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USER }}
          password: ${{ secrets.DOCKER_PASS }}

      - name: Build and push image to Dockerhub
        id: docker_build
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: ${{ env.IMAGE_NAME }}
          build-args:
            COMMIT_SHA=${{ github.sha }}

      - name: Tar Docker image
        run: |
          docker pull ${IMAGE_NAME}          
          docker image save ${IMAGE_NAME} --output ${IMAGE_TAR_FILENAME}

      - name: Cache Docker image
        uses: actions/cache@v4
        with:
          path: ${{ env.IMAGE_TAR_FILENAME }}
          key:  ${{ env.IMAGE_NAME }}


  snyk-container-scan:
    runs-on: ubuntu-latest
    needs: [setup, build-image]
    env:
      IMAGE_NAME:     ${{ needs.setup.outputs.image_name }}
      SARIF_FILENAME: snyk.container.scan.json
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Retrieve Docker image from cache
        uses: actions/cache@v4
        with:
          path: ${{ env.IMAGE_TAR_FILENAME }}
          key: ${{ env.IMAGE_NAME }}

      - name: Load Docker image
        run:
          docker image load --input ${IMAGE_TAR_FILENAME}

      - name: Setup Snyk
        uses: snyk/actions/setup@master

      - name: Run Snyk container scan
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        run:
          make snyk-container-scan
